#include <iostream>
#include <array>

// int arr [3][2] ={
//     {1,2},
//     {3,4},
//     {5,6}
// };

using namespace std;

// При запуске программы необходимо создать матрицу с пустым значением 0
array<array<int,10>,10> lib_arr {{
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0}
}};

int main()
{
    //     std::cout << "--------------------------" <<std::endl;

// заполнить главную диагональ матрицы (от [0,0] до [9,9]) значениями от 0 до 9.
    for (size_t i = 0; i < lib_arr[0].size(); ++i){
        lib_arr[i][i] = i;
        // std::cout << std::endl;
    }
// заполнить второстепенную диагональ (от [0,9] до [9,0]) значениями от 9 до 0.
    for (size_t i = 0; i < lib_arr[0].size(); ++i){
       lib_arr[i][lib_arr[0].size()-i -1] = lib_arr[0].size()-i -1;
    }

    // вывести фрагмент матрицы от [1,1] до [8,8]. Между столбцами пробел. Каждая строка матрицы на новой строке консоли.
    for (size_t i = 1; i < lib_arr[0].size() -1; ++i){
        for(size_t j = 1; j <lib_arr.size() -1; ++j){
            std::cout<<lib_arr[i][j] << " ";
        }
        std::cout << std::endl;
    }

    // for(auto& lines : lib_arr){
    //     for(auto numbers : lines){
    //         std::cout<<numbers << " ";
    //     }
    //     std::cout << std::endl;
    // }

    return 0;
}